"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const helpers_1 = require("../helpers");
const rule = {
    meta: {
        docs: {
            description: "doesn't allow Trans component be inside Trans component",
            recommended: 'error',
        },
        messages: {
            default: "Trans couldn't be wrapped into Trans",
        },
        schema: [
            {
                type: 'object',
                properties: {},
                additionalProperties: false,
            },
        ],
        type: 'problem',
    },
    defaultOptions: [],
    create: function (context) {
        return {
            JSXElement(node) {
                var _a;
                const identifierName = (0, helpers_1.getIdentifierName)((_a = node === null || node === void 0 ? void 0 : node.openingElement) === null || _a === void 0 ? void 0 : _a.name);
                if (identifierName === 'Trans' && (0, helpers_1.hasAncestorWithName)(node, 'Trans')) {
                    context.report({
                        node,
                        messageId: 'default',
                    });
                }
                return;
            },
        };
    },
};
exports.default = rule;
//# sourceMappingURL=no-trans-inside-trans.js.map