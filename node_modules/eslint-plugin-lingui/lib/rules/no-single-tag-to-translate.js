"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("@typescript-eslint/utils");
const rule = {
    meta: {
        docs: {
            description: "doesn't allow <Trans></Trans> to wrap a single element unnecessarily.",
            recommended: 'error',
        },
        messages: {
            default: '<Trans></Trans> should not wrap a single element unnecessarily',
        },
        schema: [
            {
                type: 'object',
                properties: {},
                additionalProperties: false,
            },
        ],
        type: 'problem',
    },
    defaultOptions: [],
    create: function (context) {
        return {
            'JSXClosingElement > JSXIdentifier[name=Trans]'(node) {
                var _a;
                const parentJSXElement = (_a = node.parent) === null || _a === void 0 ? void 0 : _a.parent;
                // delete all spaces or breaks
                const filteredChildren = parentJSXElement.children.filter((child) => {
                    var _a;
                    switch (child.type) {
                        case utils_1.TSESTree.AST_NODE_TYPES.JSXText:
                            return ((_a = child.value) === null || _a === void 0 ? void 0 : _a.trim()) !== '';
                        default:
                            return true;
                    }
                });
                if (filteredChildren.length === 1 &&
                    filteredChildren[0].type !== utils_1.TSESTree.AST_NODE_TYPES.JSXText) {
                    context.report({
                        node,
                        messageId: 'default',
                    });
                }
            },
        };
    },
};
exports.default = rule;
//# sourceMappingURL=no-single-tag-to-translate.js.map